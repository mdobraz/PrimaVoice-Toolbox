%% Load volume
if ~exist('force_type','var')
    file_type = '.nii';
else
    file_type = force_type;
    clear force_type
end

if exist('force_in_file','var')
    file_to_load = file_selector(file_type,force_in_file);
    clear force_in_file
elseif exist('paths','var')
    file_to_load = file_selector(file_type,paths);
else
    file_to_load = file_selector(file_type);
end

[~,name,ext] = fileparts(file_to_load);

if strcmp(ext,'.gz')
   [~,name,ext] = fileparts(name);
end

%% Load volume
P = spm_vol(file_to_load); % This script uses SPM to load the data
Y = spm_read_vols(P);

%% Display slice viewer
slice_viewer

%% Create figure
get_groot = get(groot);
borders = 0.02;
bt_width = 0.25;
bt_height = 0.08;
    
L = min(get_groot.MonitorPositions(1,3:4)) * 0.4;
Fw = L / get_groot.MonitorPositions(1,3);
Fh = L / get_groot.MonitorPositions(1,4);
bx = 1 - Fw;
by = 1 - Fh;

if exist('BET_fig','var')
    if isgraphics(BET_fig); delete(BET_fig); end
end
BET_fig = figure('units','normalized',...
                 'Position',[bx by Fw Fh],...
                 'Toolbar','none',...
                 'MenuBar','none',...
                 'Name',sprintf('Brain extraction - %s%s',name,ext),...
                 'NumberTitle','off',...
                 'resize','off');
     

%% Create brain center edit boxes
tx_center_y = 1 - borders - bt_height/2;
tx_center_width = 1 - (borders * 2);
tx_center = uicontrol('style','text',...
                 'units','normalized',...
                 'FontWeight','bold',...
                 'FontSize',(get_groot.MonitorPositions(1,3) / 256) * 1.2,...
                 'HorizontalAlignment','center',...
                 'String','Brain center of gravity coordinates',...
                 'position',[borders tx_center_y tx_center_width  bt_height/2]);

dims = {'X';'Y';'Z'};
odd = 1:2:5;
edy = tx_center_y - bt_height/2;
for i = 1:3
    edx = (borders + ((odd(i) * tx_center_width) / 6) - (bt_width / 4));
    ed_center.(dims{i}) = uicontrol('Parent',BET_fig,'Style','edit',...
                 'units','normalized',...
                 'FontWeight','bold',...
                 'Enable','off',...
                 'FontSize',(get_groot.MonitorPositions(1,3) / 256) * 1.2,...
                 'String',num2str(cursor_pos(i)),...
                 'Position',[edx edy bt_width/2 bt_height/2]);
end


%% Modify navigation sliders callback
for dim = 1:3
    sl_slice.(dims{dim}).Callback = [sl_slice.(dims{dim}).Callback sprintf('ed_center.%s.String = num2str(cursor_pos(%i));',dims{dim},dim)];
end


%% Create f & g edit boxes
tx_f_y = edy - (borders*2) - bt_height;

tx_f = uicontrol('Parent',BET_fig,'style','text',...
                 'units','normalized',...
                 'FontWeight','bold',...
                 'FontSize',(get_groot.MonitorPositions(1,3) / 256) * 1.2,...
                 'HorizontalAlignment','center',...
                 'String','Fractional intensity threshold (0->1): smaller values give larger brain outline estimates',...
                 'position',[borders tx_f_y tx_center_width  bt_height]);


             
edx = 0.5 - (bt_width / 4);
edy = tx_f_y - bt_height/2;
ed_f = uicontrol('Parent',BET_fig,'Style','edit',...
             'units','normalized',...
             'FontWeight','bold',...
             'FontSize',(get_groot.MonitorPositions(1,3) / 256) * 1.2,...
             'String','0.5',...
             'Position',[edx edy bt_width/2 bt_height/2]);


tx_g_y = edy - (borders*2) - bt_height;
tx_g = uicontrol('Parent',BET_fig,'style','text',...
                 'units','normalized',...
                 'FontWeight','bold',...
                 'FontSize',(get_groot.MonitorPositions(1,3) / 256) * 1.2,...
                 'HorizontalAlignment','center',...
                 'String','Vertical gradient in f (-1->1): positive values give larger brain outline at bottom, smaller at top',...
                 'position',[borders tx_g_y tx_center_width  bt_height]);


             
edy = tx_g_y - bt_height/2;
ed_g = uicontrol('Parent',BET_fig,'Style','edit',...
             'units','normalized',...
             'FontWeight','bold',...
             'FontSize',(get_groot.MonitorPositions(1,3) / 256) * 1.2,...
             'String','0',...
             'Position',[edx edy bt_width/2 bt_height/2]);


         
% Create popupmenu
popy = edy - bt_height;
pop_str = {'Run standard brain extraction';...
           'Robust brain centre estimation (iterates BET several times)';...
           'Eye & optic nerve cleanup';...
           'Bias field & neck cleanup';...
           'Improve BET if FOV is very small in Z';...
           'Apply to 4D FMRI data';...
           'Get additional skull and scalp surfaces';...
           'As previous, when also feeding in non-brain-extracted T2'};
       
pop_opt = uicontrol('Parent',BET_fig,'Style','popupmenu',...
                 'units','normalized',...
                 'FontSize',(get_groot.MonitorPositions(1,3) / 256) * 1.2,...
                 'String',pop_str,...
                 'Position',[borders popy tx_center_width bt_height/2]);
         
         
         
         
         
         
%% Create bet button
bt_x = 0.5 - (bt_width / 2);
if ~exist('paths','var'); paths = []; end
bt_bet = uicontrol('Parent',BET_fig,'Style','pushbutton',...
                 'units','normalized',...
                 'FontWeight','bold',...
                 'FontSize',(get_groot.MonitorPositions(1,3) / 256) * 1.2,...
                 'String','Extract brain',...
                 'Position',[bt_x borders bt_width bt_height],...
                 'Callback','fsl_bet(bt_bet,file_to_load,cursor_pos,ed_f,ed_g,pop_opt,paths)');

if exist('force_out_path','var')
    bt_bet.Callback = 'fsl_bet(bt_bet,file_to_load,cursor_pos,ed_f,ed_g,pop_opt,paths,force_out_path)';
end



